# ============================================================================
# AETHER DEVNET - Local 4-Node Development Environment
# ============================================================================
# PURPOSE: Spin up complete Aether stack for local development
#
# SERVICES:
#   - validator1-4: Four validator nodes
#   - rpc: RPC endpoint (port 8545)
#   - indexer: Block indexer + Postgres
#   - prometheus: Metrics collection
#   - grafana: Metrics dashboard
#   - minio: Object storage (snapshots, artifacts)
#
# USAGE:
#   docker compose up --build -d
#   docker compose logs -f
#   docker compose down
# ============================================================================

version: '3.8'

services:
  validator1:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.validator
    environment:
      - VALIDATOR_KEY=/keys/validator1.json
      - GENESIS_FILE=/config/genesis.json
      - VALIDATOR_INDEX=1
    volumes:
      - ./keys:/keys
      - ./config:/config
      - validator1-data:/data
    ports:
      - "9001:9000"
    networks:
      - aether-net

  validator2:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.validator
    environment:
      - VALIDATOR_KEY=/keys/validator2.json
      - GENESIS_FILE=/config/genesis.json
      - VALIDATOR_INDEX=2
    volumes:
      - ./keys:/keys
      - ./config:/config
      - validator2-data:/data
    ports:
      - "9002:9000"
    networks:
      - aether-net

  validator3:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.validator
    environment:
      - VALIDATOR_KEY=/keys/validator3.json
      - GENESIS_FILE=/config/genesis.json
      - VALIDATOR_INDEX=3
    volumes:
      - ./keys:/keys
      - ./config:/config
      - validator3-data:/data
    ports:
      - "9003:9000"
    networks:
      - aether-net

  validator4:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.validator
    environment:
      - VALIDATOR_KEY=/keys/validator4.json
      - GENESIS_FILE=/config/genesis.json
      - VALIDATOR_INDEX=4
    volumes:
      - ./keys:/keys
      - ./config:/config
      - validator4-data:/data
    ports:
      - "9004:9000"
    networks:
      - aether-net

  rpc:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.rpc
    environment:
      - GENESIS_FILE=/config/genesis.json
      - BOOTSTRAP_PEERS=validator1:9000,validator2:9000
    volumes:
      - ./config:/config
      - rpc-data:/data
    ports:
      - "8545:8545"
    networks:
      - aether-net
    depends_on:
      - validator1

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=aether_indexer
      - POSTGRES_USER=aether
      - POSTGRES_PASSWORD=aether
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aether-net

  indexer:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.indexer
    environment:
      - FIREHOSE_ENDPOINT=rpc:8546
      - DATABASE_URL=postgres://aether:aether@postgres:5432/aether_indexer
    depends_on:
      - rpc
      - postgres
    networks:
      - aether-net

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - aether-net

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana-dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - aether-net
    depends_on:
      - prometheus

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=aether
      - MINIO_ROOT_PASSWORD=aether123
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9091:9001"
    networks:
      - aether-net

networks:
  aether-net:
    driver: bridge

volumes:
  validator1-data:
  validator2-data:
  validator3-data:
  validator4-data:
  rpc-data:
  postgres-data:
  prometheus-data:
  grafana-data:
  minio-data:

